{% extends 'base.html.twig' %}

{% block title %}Emplacements{% endblock %}

{% block content %}
<form id="searchForm" action="{{ path('app_emplacement_index') }}" method="get">
        <input id="searchInput" type="text" name="q" placeholder="Search emplacements" value="{{ searchQuery }}">
    </form>
    <form action="{{ path('app_emplacement_index') }}" method="get" class="sort-form">
    <label for="sortBy" class="sort-label">Sort By:</label>
    <select id="sortBy" name="sortBy" class="sort-select">
        <option value="gouvernourat" {% if sortBy == 'gouvernourat' %}selected{% endif %}>Gouverment</option>
        <option value="capacite" {% if sortBy == 'capacite' %}selected{% endif %}>Capacity</option>
    </select>
    <label for="sortOrder" class="sort-label">Order:</label>
    <select id="sortOrder" name="sortOrder" class="sort-select">
        <option value="asc" {% if sortOrder == 'asc' %}selected{% endif %}>Ascending</option>
        <option value="desc" {% if sortOrder == 'desc' %}selected{% endif %}>Descending</option>
    </select>
    <button type="submit" class="sort-button">Sort</button>
</form>
    <div id="searchResults" class="container py-5">
        <h1 class="mb-4">Emplacements List</h1>

        <div class="table-wrapper">
            <table class="my-table">
                <thead>
                    <tr>
                        <th scope="col">Gouvernourat</th>
                        <th scope="col">Ville</th>
                        <th scope="col">Capacite</th>
                        <th scope="col">Label</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody id="emplacementTableBody">
                    {% for emplacement in emplacements %}
                        <tr onclick="location.href='{{ path('app_emplacement_show', {'id': emplacement.id}) }}';" style="cursor:pointer;">
                            <td>{{ emplacement.gouvernourat }}</td>
                            <td>{{ emplacement.ville }}</td>
                            <td>{{ emplacement.capacite }}</td>
                            <td>{{ emplacement.label }}</td>
                            <td>
                                <a class="edit-button" href="{{ path('app_emplacement_edit', {'id': emplacement.id}) }}">
                                    <img src="{{ asset('img/editIcon.svg') }}" alt="Edit Icon">
                                </a>
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="5">No Emplacements found</td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
            <div class="pagination-wrapper">
            <!-- Pagination -->
            <div class="pagination">
                {{ knp_pagination_render(emplacements) | raw }}
            </div>
        </div>
        <div class="bottom-buttons">
            <a href="{{ path('app_emplacement_new') }}" class="add-button">Create new Emplacement</a>
        </div>
         <div class="bottom-buttons">
        
        <a href="{{ path('app_conference_new') }}" class="add-button">Create new Conference</a>
    </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchForm = document.getElementById('searchForm');
        const searchInput = document.getElementById('searchInput');
        const emplacementTableBody = document.getElementById('emplacementTableBody');

        searchForm.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(searchForm);

            fetch(searchForm.action + '?' + new URLSearchParams(formData))
                .then(response => response.text())
                .then(data => {
                    const tempDiv = document.createElement('div');
                    tempDiv.innerHTML = data;
                    const newTbody = tempDiv.querySelector('#emplacementTableBody');
                    emplacementTableBody.innerHTML = newTbody.innerHTML;
                })
                .catch(error => console.error('Error fetching search results:', error));
        });

        searchInput.addEventListener('input', function() {
            const query = searchInput.value.trim();

            if (query.length === 0) {
                emplacementTableBody.innerHTML = ''; // Clear search results if search query is empty
                return;
            }

            fetch(searchForm.action + '?q=' + query)
                .then(response => response.text())
                .then(data => {
                    const tempDiv = document.createElement('div');
                    tempDiv.innerHTML = data;
                    const newTbody = tempDiv.querySelector('#emplacementTableBody');
                    emplacementTableBody.innerHTML = newTbody.innerHTML;
                })
                .catch(error => console.error('Error fetching search results:', error));
        });
    });
</script>

<script>
        document.addEventListener('DOMContentLoaded', function() {
            const sortButton = document.getElementById('sortButton');
            sortButton.addEventListener('click', function() {
                const sortField = document.getElementById('sortField').value;
                const sortOrder = document.getElementById('sortOrder').value;
                sortEmplacement(sortField, sortOrder);
            });
        });

        function sortEmplacement(field, order) {
            // Send AJAX request to the backend to fetch sorted data
            fetch(`/emplacement/sort?field=${field}&order=${order}`)
                .then(response => response.text())
                .then(data => {
                    // Update conference list with sorted data
                    document.getElementById('emplacementList').innerHTML = data;
                })
                .catch(error => console.error('Error fetching sorted data:', error));
        }
    </script>
{% endblock %}
